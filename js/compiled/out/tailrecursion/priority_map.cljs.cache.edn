;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name tailrecursion.priority-map, :imports nil, :requires {core cljs.core, cljs.core cljs.core, cljs.reader cljs.reader}, :uses {reader-error cljs.reader, register-tag-parser! cljs.reader}, :defs {PersistentPriorityMap {:num-fields 4, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name tailrecursion.priority-map/PersistentPriorityMap, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 31, :type true, :column 10, :line 7, :record false, :end-line 7, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->PersistentPriorityMap {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :line 7, :column 10, :end-line 7, :end-column 31, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :factory :positional, :arglists (quote ([priority->set-of-items item->priority meta __hash]))}, :protocols #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name tailrecursion.priority-map/->PersistentPriorityMap, :variadic false, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 31, :method-params ([priority->set-of-items item->priority meta __hash]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([priority->set-of-items item->priority meta __hash])), :skip-protocol-flag #{cljs.core/IReversible cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISorted cljs.core/ISeqable cljs.core/IMeta cljs.core/IStack cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, pm-empty-by {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :line 153, :column 8, :end-line 153, :end-column 19, :private true, :arglists (quote ([comparator]))}, :private true, :name tailrecursion.priority-map/pm-empty-by, :variadic false, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 19, :method-params ([comparator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([comparator]))}, read-priority-map {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :line 156, :column 8, :end-line 156, :end-column 25, :private true, :arglists (quote ([elems]))}, :private true, :name tailrecursion.priority-map/read-priority-map, :variadic false, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 25, :method-params ([elems]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elems]))}, priority-map {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :line 163, :column 7, :end-line 163, :end-column 19, :arglists (quote ([& keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied mappings.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map, :variadic true, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}, :method-params [(keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 0, :fn-var true, :arglists ([& keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied mappings."}, priority-map-by {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :line 172, :column 7, :end-line 172, :end-column 22, :arglists (quote ([comparator & keyvals])), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied comparator.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(comparator keyvals)], :arglists ([comparator & keyvals]), :arglists-meta (nil)}}, :name tailrecursion.priority-map/priority-map-by, :variadic true, :file "resources/public/js/compiled/out/tailrecursion/priority_map.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(comparator keyvals)], :arglists ([comparator & keyvals]), :arglists-meta (nil)}, :method-params [(comparator keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists ([comparator & keyvals]), :doc "keyval => key val\n  Returns a new priority map with supplied\n  mappings, using the supplied comparator."}}, :require-macros {coreclj cljs.core, cljs.core cljs.core}, :cljs.analyzer/constants {:seen #{:tailrecursion.priority-map/not-found priority->set-of-items __hash meta item->priority :mutable}, :order [:tailrecursion.priority-map/not-found priority->set-of-items item->priority meta __hash :mutable]}, :doc nil}