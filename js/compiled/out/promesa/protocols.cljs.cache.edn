;; Analyzed by ClojureScript 1.7.145
{:name promesa.protocols, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {IPromise {:meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 27, :column 14, :end-line 27, :end-column 22, :doc "A basic promise abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-then [[_ cb]], -catch [[_ cb] [_ type cb]]}}}, :protocol-symbol true, :name promesa.protocols/IPromise, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 22, :column 1, :line 27, :protocol-info {:methods {-then [[_ cb]], -catch [[_ cb] [_ type cb]]}}, :info nil, :end-line 27, :impls #{}, :doc "A basic promise abstraction.", :jsdoc ("@interface")}, -then {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 29, :column 4, :end-line 29, :end-column 9, :protocol promesa.protocols/IPromise, :doc "Then chain operation over promise.", :arglists (quote ([_ cb]))}, :protocol promesa.protocols/IPromise, :name promesa.protocols/-then, :variadic false, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 9, :method-params ([_ cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ cb])), :doc "Then chain operation over promise."}, -catch {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 30, :column 4, :end-line 30, :end-column 10, :protocol promesa.protocols/IPromise, :doc "Catch chain operation over promise.", :arglists (quote ([_ cb] [_ type cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ cb] [_ type cb]), :arglists ([_ cb] [_ type cb]), :arglists-meta (nil nil)}}, :protocol promesa.protocols/IPromise, :name promesa.protocols/-catch, :variadic false, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([_ cb] [_ type cb]), :arglists ([_ cb] [_ type cb]), :arglists-meta (nil nil)}, :method-params ([_ cb] [_ type cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists ([_ cb] [_ type cb]), :doc "Catch chain operation over promise."}, IState {:meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 32, :column 14, :end-line 32, :end-column 20, :doc "Additional state related abstraction.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-resolved? [[_]], -rejected? [[_]], -done? [[_]]}}}, :protocol-symbol true, :name promesa.protocols/IState, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 20, :column 1, :line 32, :protocol-info {:methods {-resolved? [[_]], -rejected? [[_]], -done? [[_]]}}, :info nil, :end-line 32, :impls #{}, :doc "Additional state related abstraction.", :jsdoc ("@interface")}, -resolved? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 34, :column 4, :end-line 34, :end-column 14, :protocol promesa.protocols/IState, :doc "Returns true if a promise is resolved.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-resolved?, :variadic false, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns true if a promise is resolved."}, -rejected? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 35, :column 4, :end-line 35, :end-column 14, :protocol promesa.protocols/IState, :doc "Returns true if a promise is rejected.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-rejected?, :variadic false, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Returns true if a promise is rejected."}, -done? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/protocols.cljs", :line 36, :column 4, :end-line 36, :end-column 10, :protocol promesa.protocols/IState, :doc "Retutns true if a promise is pending.", :arglists (quote ([_]))}, :protocol promesa.protocols/IState, :name promesa.protocols/-done?, :variadic false, :file "resources/public/js/compiled/out/promesa/protocols.cljs", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc "Retutns true if a promise is pending."}}}