;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{delay spread some}, :name promesa.core, :imports nil, :requires {m cats.core, cats.core cats.core, mc cats.context, cats.context cats.context, mp cats.protocols, cats.protocols cats.protocols, p promesa.protocols, promesa.protocols promesa.protocols, org.bluebird org.bluebird}, :uses nil, :defs {timeout {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 189, :column 7, :end-line 189, :end-column 14, :arglists (quote ([p t] [p t v])), :doc "Returns a cancellable promise that will be fulfilled\n  with this promise's fulfillment value or rejection reason.\n  However, if this promise is not fulfilled or rejected\n  within `ms` milliseconds, the returned promise is cancelled\n  with a TimeoutError", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p t] [p t v]), :arglists ([p t] [p t v]), :arglists-meta (nil nil)}}, :name promesa.core/timeout, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p t] [p t v]), :arglists ([p t] [p t v]), :arglists-meta (nil nil)}, :method-params ([p t] [p t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 3, :fn-var true, :arglists ([p t] [p t v]), :doc "Returns a cancellable promise that will be fulfilled\n  with this promise's fulfillment value or rejection reason.\n  However, if this promise is not fulfilled or rejected\n  within `ms` milliseconds, the returned promise is cancelled\n  with a TimeoutError"}, branch {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 148, :column 7, :end-line 148, :end-column 13, :arglists (quote ([p callback errback])), :doc "A branching helper for promises."}, :name promesa.core/branch, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 13, :method-params ([p callback errback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p callback errback])), :doc "A branching helper for promises."}, delay {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 198, :column 7, :end-line 198, :end-column 12, :arglists (quote ([t] [t v])), :doc "Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t v]), :arglists ([t] [t v]), :arglists-meta (nil nil)}}, :name promesa.core/delay, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([t] [t v]), :arglists ([t] [t v]), :arglists-meta (nil nil)}, :method-params ([t] [t v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists ([t] [t v]), :doc "Given a timeout in miliseconds and optional\n  value, returns a promise that will fulfilled\n  with provided value (or nil) after the\n  time is reached."}, resolved? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 104, :column 7, :end-line 104, :end-column 16, :arglists (quote ([p])), :doc "Returns true if promise `p` is already fulfilled."}, :name promesa.core/resolved?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true if promise `p` is already fulfilled."}, any {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 163, :column 7, :end-line 163, :end-column 10, :arglists (quote ([promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."}, :name promesa.core/any, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 10, :method-params ([promises]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled when first one item in the\n  array is fulfilled."}, t_promesa$core8074 {:num-fields 1, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :name promesa.core/t_promesa$core8074, :file "resources/public/js/compiled/out/promesa/core.cljs", :type true, :anonymous true, :column 3, :line 213, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, fulfilled? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 109, :column 7, :end-line 109, :end-column 17, :arglists (quote ([p])), :doc "Convenience alias for the `resolved?` predicate."}, :name promesa.core/fulfilled?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 17, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Convenience alias for the `resolved?` predicate."}, promisify {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 178, :column 7, :end-line 178, :end-column 16, :arglists (quote ([callable])), :doc "Given a nodejs like function that accepts a callback\n  as the last argument and return an other function\n  that returns a promise."}, :name promesa.core/promisify, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 16, :method-params ([callable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([callable])), :doc "Given a nodejs like function that accepts a callback\n  as the last argument and return an other function\n  that returns a promise."}, rejected {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([v])), :doc "Return a rejected promise with provided reason."}, :name promesa.core/rejected, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Return a rejected promise with provided reason."}, promise {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 89, :column 7, :end-line 89, :end-column 14, :arglists (quote ([v])), :doc "The promise constructor."}, :name promesa.core/promise, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "The promise constructor."}, done? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 124, :column 7, :end-line 124, :end-column 12, :arglists (quote ([p])), :doc "Returns true if promise `p` is already done."}, :name promesa.core/done?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 12, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true if promise `p` is already done."}, some {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 170, :column 7, :end-line 170, :end-column 11, :arglists (quote ([n promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled when `n` number of promises\n  is fulfilled."}, :name promesa.core/some, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 11, :method-params ([n promises]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled when `n` number of promises\n  is fulfilled."}, all {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 156, :column 7, :end-line 156, :end-column 10, :arglists (quote ([promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled."}, :name promesa.core/all, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 10, :method-params ([promises]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([promises])), :doc "Given an array of promises, return a promise\n  that is fulfilled  when all the items in the\n  array are fulfilled."}, promise? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 99, :column 7, :end-line 99, :end-column 15, :arglists (quote ([p])), :doc "Returns true if `p` is a primise instance."}, :name promesa.core/promise?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 15, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true if `p` is a primise instance."}, resolved {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([v])), :doc "Return a resolved promise with provided value."}, :name promesa.core/resolved, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 15, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Return a resolved promise with provided value."}, catch {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 141, :column 7, :end-line 141, :end-column 12, :arglists (quote ([p callback] [p type callback])), :doc "Catch all promise chain helper.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p callback] [p type callback]), :arglists ([p callback] [p type callback]), :arglists-meta (nil nil)}}, :name promesa.core/catch, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([p callback] [p type callback]), :arglists ([p callback] [p type callback]), :arglists-meta (nil nil)}, :method-params ([p callback] [p type callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 3, :fn-var true, :arglists ([p callback] [p type callback]), :doc "Catch all promise chain helper."}, chain {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 136, :column 7, :end-line 136, :end-column 12, :arglists (quote ([p & funcs])), :doc "A variadic chain operation.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p funcs)], :arglists ([p & funcs]), :arglists-meta (nil)}}, :name promesa.core/chain, :variadic true, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p funcs)], :arglists ([p & funcs]), :arglists-meta (nil)}, :method-params [(p funcs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists ([p & funcs]), :doc "A variadic chain operation."}, rejected? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 114, :column 7, :end-line 114, :end-column 16, :arglists (quote ([p])), :doc "Returns true if promise `p` is already rejected."}, :name promesa.core/rejected?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true if promise `p` is already rejected."}, then {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 131, :column 7, :end-line 131, :end-column 11, :arglists (quote ([p callback])), :doc "A chain helper for promises."}, :name promesa.core/then, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 11, :method-params ([p callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p callback])), :doc "A chain helper for promises."}, ->t_promesa$core8074 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta8075])), :file nil}, :protocols #{cats.protocols/Semigroup cats.protocols/Monad cats.protocols/Functor cljs.core/IMeta cats.protocols/Context cljs.core/IWithMeta cats.protocols/Applicative}, :name promesa.core/->t_promesa$core8074, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :method-params ([meta8075]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta8075])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, pending? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 119, :column 7, :end-line 119, :end-column 15, :arglists (quote ([p])), :doc "Returns true if promise `p` is stil pending."}, :name promesa.core/pending?, :variadic false, :file "resources/public/js/compiled/out/promesa/core.cljs", :end-column 15, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Returns true if promise `p` is stil pending."}, promise-context {:name promesa.core/promise-context, :file "resources/public/js/compiled/out/promesa/core.cljs", :line 211, :column 1, :end-line 212, :end-column 18, :no-doc true, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/promesa/core.cljs", :line 212, :column 3, :end-line 212, :end-column 18, :no-doc true}}}, :require-macros {m cats.core, cats.core cats.core}, :cljs.analyzer/constants {:seen #{meta8075 :else}, :order [:else meta8075]}, :doc nil}