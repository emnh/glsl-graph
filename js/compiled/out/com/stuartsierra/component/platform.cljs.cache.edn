;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name com.stuartsierra.component.platform, :imports nil, :requires nil, :uses nil, :defs {argument-error {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :line 5, :column 7, :end-line 5, :end-column 21, :arglists (quote ([message]))}, :name com.stuartsierra.component.platform/argument-error, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, type-name {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([x])), :doc "Returns a string name for the type/class of x."}, :name com.stuartsierra.component.platform/type-name, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns a string name for the type/class of x."}, alter-ex-data {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([error f & args])), :doc "Returns a new ExceptionInfo with the same details as error and\n  ex-data as the result of (apply f (ex-data throwable) args).", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(error f args)], :arglists ([error f & args]), :arglists-meta (nil)}}, :name com.stuartsierra.component.platform/alter-ex-data, :variadic true, :file "resources/public/js/compiled/out/com/stuartsierra/component/platform.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(error f args)], :arglists ([error f & args]), :arglists-meta (nil)}, :method-params [(error f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists ([error f & args]), :doc "Returns a new ExceptionInfo with the same details as error and\n  ex-data as the result of (apply f (ex-data throwable) args)."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:com.stuartsierra.component.platform/illegal-argument :reason}, :order [:reason :com.stuartsierra.component.platform/illegal-argument]}, :doc "Platform-specific implementation details for Component on\n  ClojureScript (JavaScript). This is not a public API."}