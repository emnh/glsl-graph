;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name com.stuartsierra.component, :imports nil, :requires {dep com.stuartsierra.dependency, com.stuartsierra.dependency com.stuartsierra.dependency, platform com.stuartsierra.component.platform, com.stuartsierra.component.platform com.stuartsierra.component.platform}, :uses nil, :defs {start-system {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 155, :column 7, :end-line 155, :end-column 19, :arglists (quote ([system] [system component-keys])), :doc "Recursively starts components in the system, in dependency order,\n  assoc'ing in their dependencies along the way. component-keys is a\n  collection of keys (order doesn't matter) in the system specifying\n  the components to start, defaults to all keys in the system.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([system] [system component-keys]), :arglists ([system] [system component-keys]), :arglists-meta (nil nil)}}, :name com.stuartsierra.component/start-system, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([system] [system component-keys]), :arglists ([system] [system component-keys]), :arglists-meta (nil nil)}, :method-params ([system] [system component-keys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 2, :fn-var true, :arglists ([system] [system component-keys]), :doc "Recursively starts components in the system, in dependency order,\n  assoc'ing in their dependencies along the way. component-keys is a\n  collection of keys (order doesn't matter) in the system specifying\n  the components to start, defaults to all keys in the system."}, Lifecycle {:meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 5, :column 14, :end-line 5, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {start [[component]], stop [[component]]}}}, :protocol-symbol true, :name com.stuartsierra.component/Lifecycle, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 23, :column 1, :line 5, :protocol-info {:methods {start [[component]], stop [[component]]}}, :info nil, :end-line 5, :impls #{com.stuartsierra.component/SystemMap object}, :doc nil, :jsdoc ("@interface")}, using {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([component dependencies])), :doc "Associates metadata with component describing the other components\n  on which it depends. Component dependencies are specified as a map.\n  Keys in the map correspond to keys in this component which must be\n  provided by its containing system. Values in the map are the keys in\n  the system at which those components may be found. Alternatively, if\n  the keys are the same in both the component and its enclosing\n  system, they may be specified as a vector of keys."}, :name com.stuartsierra.component/using, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 12, :method-params ([component dependencies]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component dependencies])), :doc "Associates metadata with component describing the other components\n  on which it depends. Component dependencies are specified as a map.\n  Keys in the map correspond to keys in this component which must be\n  provided by its containing system. Values in the map are the keys in\n  the system at which those components may be found. Alternatively, if\n  the keys are the same in both the component and its enclosing\n  system, they may be specified as a vector of keys."}, dependencies {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([component])), :doc "Returns the map of other components on which this component depends."}, :name com.stuartsierra.component/dependencies, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 19, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the map of other components on which this component depends."}, SystemMap {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative com.stuartsierra.component/Lifecycle cljs.core/IMap cljs.core/ILookup}, :name com.stuartsierra.component/SystemMap, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 175, :record true, :end-line 175, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, get-component {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 56, :column 8, :end-line 56, :end-column 21, :private true, :arglists (quote ([system key]))}, :private true, :name com.stuartsierra.component/get-component, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 21, :method-params ([system key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([system key]))}, update-system {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 129, :column 7, :end-line 129, :end-column 20, :arglists (quote ([system component-keys f & args])), :doc "Invokes (apply f component args) on each of the components at\n  component-keys in the system, in dependency order. Before invoking\n  f, assoc's updated dependencies of the component.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(system component-keys f args)], :arglists ([system component-keys f & args]), :arglists-meta (nil)}}, :name com.stuartsierra.component/update-system, :variadic true, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(system component-keys f args)], :arglists ([system component-keys f & args]), :arglists-meta (nil)}, :method-params [(system component-keys f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 3, :fn-var true, :arglists ([system component-keys f & args]), :doc "Invokes (apply f component args) on each of the components at\n  component-keys in the system, in dependency order. Before invoking\n  f, assoc's updated dependencies of the component."}, nil-component {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 50, :column 8, :end-line 50, :end-column 21, :private true, :arglists (quote ([system key]))}, :private true, :name com.stuartsierra.component/nil-component, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 21, :method-params ([system key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([system key]))}, ex-without-components {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 218, :column 7, :end-line 218, :end-column 28, :arglists (quote ([error])), :doc "If the error has ex-data provided by the com.stuartsierra.component\n  namespace, returns a new exception instance with the :component\n  and :system removed from its ex-data. Preserves the other details of\n  the original error. If the error was not created by this namespace,\n  returns it unchanged. Use this when you want to catch and rethrow\n  exceptions without including the full component or system."}, :name com.stuartsierra.component/ex-without-components, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 28, :method-params ([error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([error])), :doc "If the error has ex-data provided by the com.stuartsierra.component\n  namespace, returns a new exception instance with the :component\n  and :system removed from its ex-data. Preserves the other details of\n  the original error. If the error was not created by this namespace,\n  returns it unchanged. Use this when you want to catch and rethrow\n  exceptions without including the full component or system."}, get-dependency {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 67, :column 8, :end-line 67, :end-column 22, :private true, :arglists (quote ([system system-key component dependency-key]))}, :private true, :name com.stuartsierra.component/get-dependency, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 22, :method-params ([system system-key component dependency-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 4, :fn-var true, :arglists (quote ([system system-key component dependency-key]))}, system-using {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([system dependency-map])), :doc "Associates dependency metadata with multiple components in the\n  system. dependency-map is a map of keys in the system to maps or\n  vectors specifying the dependencies of the component at that key in\n  the system, as per 'using'."}, :name com.stuartsierra.component/system-using, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 19, :method-params ([system dependency-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([system dependency-map])), :doc "Associates dependency metadata with multiple components in the\n  system. dependency-map is a map of keys in the system to maps or\n  vectors specifying the dependencies of the component at that key in\n  the system, as per 'using'."}, assoc-dependencies {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 111, :column 8, :end-line 111, :end-column 26, :private true, :arglists (quote ([component system]))}, :private true, :name com.stuartsierra.component/assoc-dependencies, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 26, :method-params ([component system]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component system]))}, start {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 6, :column 4, :end-line 6, :end-column 9, :protocol com.stuartsierra.component/Lifecycle, :doc "Begins operation of this component. Synchronous, does not return\n  until the component is started. Returns an updated version of this\n  component.", :arglists (quote ([component]))}, :protocol com.stuartsierra.component/Lifecycle, :name com.stuartsierra.component/start, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 9, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Begins operation of this component. Synchronous, does not return\n  until the component is started. Returns an updated version of this\n  component."}, dependency-graph {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 95, :column 7, :end-line 95, :end-column 23, :arglists (quote ([system component-keys])), :doc "Returns a dependency graph, using the data structures defined in\n  com.stuartsierra.dependency, for the components found by\n  (select-keys system component-keys)"}, :name com.stuartsierra.component/dependency-graph, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 23, :method-params ([system component-keys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([system component-keys])), :doc "Returns a dependency graph, using the data structures defined in\n  com.stuartsierra.dependency, for the components found by\n  (select-keys system component-keys)"}, stop-system {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 165, :column 7, :end-line 165, :end-column 18, :arglists (quote ([system] [system component-keys])), :doc "Recursively stops components in the system, in reverse dependency\n  order. component-keys is a collection of keys (order doesn't matter)\n  in the system specifying the components to stop, defaults to all\n  keys in the system.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([system] [system component-keys]), :arglists ([system] [system component-keys]), :arglists-meta (nil nil)}}, :name com.stuartsierra.component/stop-system, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([system] [system component-keys]), :arglists ([system] [system component-keys]), :arglists-meta (nil nil)}, :method-params ([system] [system component-keys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists ([system] [system component-keys]), :doc "Recursively stops components in the system, in reverse dependency\n  order. component-keys is a collection of keys (order doesn't matter)\n  in the system specifying the components to stop, defaults to all\n  keys in the system."}, update-system-reverse {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 143, :column 7, :end-line 143, :end-column 28, :arglists (quote ([system component-keys f & args])), :doc "Like update-system but operates in reverse dependency order.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(system component-keys f args)], :arglists ([system component-keys f & args]), :arglists-meta (nil)}}, :name com.stuartsierra.component/update-system-reverse, :variadic true, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(system component-keys f args)], :arglists ([system component-keys f & args]), :arglists-meta (nil)}, :method-params [(system component-keys f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 3, :fn-var true, :arglists ([system component-keys f & args]), :doc "Like update-system but operates in reverse dependency order."}, map->SystemMap {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 175, :column 12, :end-line 175, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__9147]))}, :name com.stuartsierra.component/map->SystemMap, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 21, :method-params ([G__9147]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__9147]))}, stop {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 10, :column 4, :end-line 10, :end-column 8, :protocol com.stuartsierra.component/Lifecycle, :doc "Ceases operation of this component. Synchronous, does not return\n  until the component is stopped. Returns an updated version of this\n  component.", :arglists (quote ([component]))}, :protocol com.stuartsierra.component/Lifecycle, :name com.stuartsierra.component/stop, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 8, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Ceases operation of this component. Synchronous, does not return\n  until the component is stopped. Returns an updated version of this\n  component."}, assoc-dependency {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 107, :column 8, :end-line 107, :end-column 24, :private true, :arglists (quote ([system component dependency-key system-key]))}, :private true, :name com.stuartsierra.component/assoc-dependency, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 24, :method-params ([system component dependency-key system-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 4, :fn-var true, :arglists (quote ([system component dependency-key system-key]))}, try-action {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 116, :column 8, :end-line 116, :end-column 18, :private true, :arglists (quote ([component system key f args]))}, :private true, :name com.stuartsierra.component/try-action, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 18, :method-params ([component system key f args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 5, :fn-var true, :arglists (quote ([component system key f args]))}, ex-component? {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 209, :column 7, :end-line 209, :end-column 20, :arglists (quote ([error])), :doc "True if the error has ex-data indicating it was thrown by something\n  in the com.stuartsierra.component namespace."}, :name com.stuartsierra.component/ex-component?, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 20, :method-params ([error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([error])), :doc "True if the error has ex-data indicating it was thrown by something\n  in the com.stuartsierra.component namespace."}, ->SystemMap {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 175, :column 12, :end-line 175, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name com.stuartsierra.component/->SystemMap, :variadic false, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 175, :end-line 175, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, system-map {:protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/com/stuartsierra/component.cljc", :line 192, :column 7, :end-line 192, :end-column 17, :arglists (quote ([& keyvals])), :doc "Returns a system constructed of key/value pairs. The system has\n  default implementations of the Lifecycle 'start' and 'stop' methods\n  which recursively start/stop all components in the system.\n\n  System maps print as #<SystemMap> to avoid overwhelming the printer\n  with large objects. As a consequence, printed system maps cannot be\n  'read'. To disable this behavior and print system maps like normal\n  records, call\n  (remove-method clojure.core/print-method com.stuartsierra.component.SystemMap)", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}}, :name com.stuartsierra.component/system-map, :variadic true, :file "resources/public/js/compiled/out/com/stuartsierra/component.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(keyvals)], :arglists ([& keyvals]), :arglists-meta (nil)}, :method-params [(keyvals)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 0, :fn-var true, :arglists ([& keyvals]), :doc "Returns a system constructed of key/value pairs. The system has\n  default implementations of the Lifecycle 'start' and 'stop' methods\n  which recursively start/stop all components in the system.\n\n  System maps print as #<SystemMap> to avoid overwhelming the printer\n  with large objects. As a consequence, printed system maps cannot be\n  'read'. To disable this behavior and print system maps like normal\n  records, call\n  (remove-method clojure.core/print-method com.stuartsierra.component.SystemMap)"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:com.stuartsierra.component/component-function-threw-exception :com.stuartsierra.component/dependencies :com.stuartsierra.component/missing-dependency :system :else :protocol :ns :name :file :end-column :system-key :component :function :column :com.stuartsierra.component/invalid-dependencies :reason :com.stuartsierra.component/not-found com.stuartsierra.component/start com.stuartsierra.component start :dependency-key :line component com.stuartsierra.component/stop :end-line stop :arglists :doc :com.stuartsierra.component/nil-component :dependencies :com.stuartsierra.component/missing-component :test com.stuartsierra.component/Lifecycle}, :order [:com.stuartsierra.component/dependencies :else :reason :component :dependencies :com.stuartsierra.component/invalid-dependencies :system-key :system :com.stuartsierra.component/nil-component :com.stuartsierra.component/not-found :com.stuartsierra.component/missing-component :dependency-key :com.stuartsierra.component/missing-dependency :function :com.stuartsierra.component/component-function-threw-exception com.stuartsierra.component/start :protocol :ns :name :file :end-column :column :line :end-line :arglists :doc :test com.stuartsierra.component/Lifecycle com.stuartsierra.component start component com.stuartsierra.component/stop stop]}, :doc nil}