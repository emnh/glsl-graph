;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name cats.context, :imports nil, :requires {p cats.protocols, cats.protocols cats.protocols}, :uses nil, :defs {*context* {:name cats.context/*context*, :file "resources/public/js/compiled/out/cats/context.cljc", :line 30, :column 1, :end-line 30, :end-column 25, :dynamic true, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 30, :column 16, :end-line 30, :end-column 25, :dynamic true}}, +level-default+ {:name cats.context/+level-default+, :file "resources/public/js/compiled/out/cats/context.cljc", :line 31, :column 1, :end-line 31, :end-column 29, :const true, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 31, :column 14, :end-line 31, :end-column 29, :const true}}, +level-transformer+ {:name cats.context/+level-transformer+, :file "resources/public/js/compiled/out/cats/context.cljc", :line 32, :column 1, :end-line 32, :end-column 33, :const true, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 32, :column 14, :end-line 32, :end-column 33, :const true}}, throw-ilegal-argument {:no-doc true, :protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 34, :column 7, :end-line 34, :end-column 28, :arglists (quote ([text])), :no-doc true, :internal true}, :name cats.context/throw-ilegal-argument, :variadic false, :file "resources/public/js/compiled/out/cats/context.cljc", :end-column 28, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal true, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text]))}, not-nil? {:name cats.context/not-nil?, :file "resources/public/js/compiled/out/cats/context.cljc", :line 64, :column 1, :end-line 64, :end-column 24, :private true, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 64, :column 16, :end-line 64, :end-column 24, :private true}}, get-current {:no-doc true, :protocol-inline nil, :meta {:file "/home/emh/github/glsl-graph/resources/public/js/compiled/out/cats/context.cljc", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([] [param])), :doc "Get current context or obtain it from\n  the provided instance.", :no-doc true, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [param]), :arglists ([] [param]), :arglists-meta (nil nil)}}, :name cats.context/get-current, :variadic false, :file "resources/public/js/compiled/out/cats/context.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [param]), :arglists ([] [param]), :arglists-meta (nil nil)}, :method-params ([] [param]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists ([] [param]), :doc "Get current context or obtain it from\n  the provided instance."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else}, :order [:else]}, :doc "A cats context management."}